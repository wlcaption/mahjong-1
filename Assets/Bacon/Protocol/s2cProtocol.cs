// Generated by sprotodump. DO NOT EDIT!
using System;
using Sproto;
using System.Collections.Generic;

public class S2cProtocol : ProtocolBase {
	public static  S2cProtocol Instance = new S2cProtocol();
	private S2cProtocol() {
		Protocol.SetProtocol<call> (call.Tag);
		Protocol.SetRequest<S2cSprotoType.call.request> (call.Tag);

		Protocol.SetProtocol<dice> (dice.Tag);
		Protocol.SetRequest<S2cSprotoType.dice.request> (dice.Tag);
		Protocol.SetResponse<S2cSprotoType.dice.response> (dice.Tag);

		Protocol.SetProtocol<gang> (gang.Tag);
		Protocol.SetRequest<S2cSprotoType.gang.request> (gang.Tag);

		Protocol.SetProtocol<handshake> (handshake.Tag);
		Protocol.SetResponse<S2cSprotoType.handshake.response> (handshake.Tag);

		Protocol.SetProtocol<hu> (hu.Tag);
		Protocol.SetRequest<S2cSprotoType.hu.request> (hu.Tag);

		Protocol.SetProtocol<join> (join.Tag);
		Protocol.SetRequest<S2cSprotoType.join.request> (join.Tag);
		Protocol.SetResponse<S2cSprotoType.join.response> (join.Tag);

		Protocol.SetProtocol<lead> (lead.Tag);
		Protocol.SetRequest<S2cSprotoType.lead.request> (lead.Tag);
		Protocol.SetResponse<S2cSprotoType.lead.response> (lead.Tag);

		Protocol.SetProtocol<leave> (leave.Tag);
		Protocol.SetRequest<S2cSprotoType.leave.request> (leave.Tag);
		Protocol.SetResponse<S2cSprotoType.leave.response> (leave.Tag);

		Protocol.SetProtocol<match> (match.Tag);
		Protocol.SetRequest<S2cSprotoType.match.request> (match.Tag);
		Protocol.SetResponse<S2cSprotoType.match.response> (match.Tag);

		Protocol.SetProtocol<peng> (peng.Tag);
		Protocol.SetRequest<S2cSprotoType.peng.request> (peng.Tag);

		Protocol.SetProtocol<shuffle> (shuffle.Tag);
		Protocol.SetRequest<S2cSprotoType.shuffle.request> (shuffle.Tag);
		Protocol.SetResponse<S2cSprotoType.shuffle.response> (shuffle.Tag);

		Protocol.SetProtocol<take_turn> (take_turn.Tag);
		Protocol.SetRequest<S2cSprotoType.take_turn.request> (take_turn.Tag);
		Protocol.SetResponse<S2cSprotoType.take_turn.response> (take_turn.Tag);

	}

	public class call {
		public const int Tag = 9;
	}

	public class dice {
		public const int Tag = 11;
	}

	public class gang {
		public const int Tag = 7;
	}

	public class handshake {
		public const int Tag = 1;
	}

	public class hu {
		public const int Tag = 8;
	}

	public class join {
		public const int Tag = 3;
	}

	public class lead {
		public const int Tag = 12;
	}

	public class leave {
		public const int Tag = 4;
	}

	public class match {
		public const int Tag = 2;
	}

	public class peng {
		public const int Tag = 6;
	}

	public class shuffle {
		public const int Tag = 10;
	}

	public class take_turn {
		public const int Tag = 5;
	}

}